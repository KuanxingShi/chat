
消息结构
struct msg_t{
	unsigned char head[4];
	char body[1024];
};

-------------------------------
从client到server的消息有
0、send消息
1、login登录消息

-------------------------------
从server到client的消息有
0、send消息
1、status用户状态消息
2、sys系统消息

---------------------------------
client端消息说明
0、send消息定义
head[0] = 0:send消息（整数）
head[1] :消息源（源用户ID号）（整数）
head[2] :消息目的（目的用户ID号）（整数）
head[3] :暂时保留
body[1024]:消息内容

1、login登录消息定义
head[0] = 1:登录消息（整数）
head[1] :登录用户ID号（整数）
head[2] :暂时保留
head[3] :暂时保留
body：登录密码(字符)


-------------------------
server端消息说明
0、send消息定义
head[0] = 0:deliver消息（整数）
head[1] :消息源（源用户ID号）（整数）
head[2] :消息目的（目的用户ID号）（整数）
head[3] :暂时保留
body[1024]:消息内容（字符）

1、status用户状态消息定义
head[0] = 1:用户状态消息（整数）
head[1] :暂时保留
head[2] :暂时保留
head[3] :暂时保留
body[0]:ID号为0的用户在线状态（字符），（'0'离线），（'1'在线）
body[1]:ID号为1的用户在线状态（字符），（'0'离线），（'1'在线）
body[2]:ID号为2的用户在线状态（字符），（'0'离线），（'1'在线）
body[3]:ID号为3的用户在线状态（字符），（'0'离线），（'1'在线）
body[4]:ID号为4的用户在线状态（字符），（'0'离线），（'1'在线）
body[5]:ID号为5的用户在线状态（字符），（'0'离线），（'1'在线）
body[6]:ID号为6的用户在线状态（字符），（'0'离线），（'1'在线）
body[7]:ID号为7的用户在线状态（字符），（'0'离线），（'1'在线）
body[8]:ID号为8的用户在线状态（字符），（'0'离线），（'1'在线）
body[9]:ID号为9的用户在线状态（字符），（'0'离线），（'1'在线）
....................以此类推...........................

2、sys系统消息
head[0] = 2:系统消息(整数)
head[1] :（整数）0无法识别的消息，1无效userid，2无效密码, 3userid已经登录,4其他
head[2] :暂时保留
head[3] :暂时保留
body[1024]：空，暂时保留


